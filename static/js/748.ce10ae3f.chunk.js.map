{"version":3,"file":"static/js/748.ce10ae3f.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","redux/contacts/selectors.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Contacts/Contacts.js","pages/Contacts.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contactsStore.contacts.items;\n\nexport const getFilter = state => state.filter.value;\n\nexport const getIsLoading = state => state.contactsStore.isLoading;\n\nexport const getError = state => state.contactsStore.error;\n\nexport const selectFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { FormContainer } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name': {\n        setName(value);\n        return;\n      }\n      case 'phone': {\n        setNumber(value);\n        return;\n      }\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactName = name.toLowerCase();\n\n    if (!/^[0-9-]+$/.test(phone)) {\n      alert('Please enter a valid numeric phone number.');\n      return;\n    }\n    if (contacts.some(contact => contact.name.toLowerCase() === contactName)) {\n      alert(`Contact with the name ${name} already exists in the phonebook.`);\n      return;\n    }\n    dispatch(addContact({ name, phone }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <FormContainer onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n          required\n        />\n        <label>Number</label>\n        <input\n          type=\"tel\"\n          onChange={handleChange}\n          name=\"phone\"\n          value={phone}\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: block;\n  margin-bottom: 15px;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  width: 145px;\n`;\n","import React from 'react';\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(getFilter);\n\n  const handleChange = event => {\n    const { value } = event.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <FilterLabel>Find contacts by name</FilterLabel>\n      <FilterInput type=\"text\" onChange={handleChange} value={filterContacts} />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList__titleWhite\":\"Contacts_ContactList__titleWhite__9BXIt\",\"ContactList__titleBlue\":\"Contacts_ContactList__titleBlue__KTRKa\",\"ContactList__style\":\"Contacts_ContactList__style__rm1iD\"};","import styled from 'styled-components';\nexport const ListStyled = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 5px;\n`;\n","import React from 'react';\nimport { ListStyled } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\n// export const ContactListItem = ({ contact }) => {\n//   const dispatch = useDispatch();\n\n//   return (\n//     <ListStyled>\n//       <li>\n//         {contact.name}: {contact.number}\n//       </li>\n//       <button type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}>\n//         Delete\n//       </button>\n//     </ListStyled>\n//   );\n// };\nimport { toast } from 'react-toastify';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    try {\n      console.log('Deleting contact with ID:', contact.id);\n      await dispatch(deleteContact(contact.id));\n      toast.info(`${contact.name} removed from contacts.`);\n    } catch (error) {\n      toast.error('Oops.... something went wrong');\n    }\n  };\n\n  return (\n    <ListStyled>\n      <li>\n        {contact.name}: {contact.number}\n      </li>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </ListStyled>\n  );\n};\n","import { ContactListItem } from 'components/ContactItem/ContactItem';\nimport React, { useEffect } from 'react';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  // console.log('Contacts:', contacts);\n\n  return (\n    <div>\n      <ul>\n        {contacts.map(contact => (\n          <ContactListItem\n            key={contact.id}\n            contact={contact}\n            onDeleteContact={() => dispatch(deleteContact(contact.id))}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default ContactsList;\n","import React, { useEffect } from 'react';\nimport Form from '../Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport css from '../Contacts/Contacts.module.css';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport { useDispatch } from 'react-redux';\n// import { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactsView = () => {\n  // const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.ContactsList__style}>\n      <h1 className={css.ContactsList__titleBlue}>Your phonebook</h1>\n      <Form />\n\n      <h2 className={css.ContactsList__titleBlue}>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsView;\n","import ContactsView from 'components/Contacts/Contacts';\nimport React from 'react';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <ContactsView />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","getContacts","state","contactsStore","contacts","items","getFilter","filter","value","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","phone","setNumber","dispatch","useDispatch","useSelector","handleChange","e","_e$target","target","_jsx","children","_jsxs","onSubmit","preventDefault","contactName","test","some","alert","concat","addContact","type","onChange","required","FilterLabel","FilterInput","_templateObject2","Filter","filterContacts","_Fragment","event","currentTarget","setFilter","ListStyled","ContactListItem","_ref","handleDelete","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","console","log","id","deleteContact","toast","t0","stop","apply","arguments","number","onClick","useEffect","fetchContacts","map","onDeleteContact","className","css","Form","ContactsList","ContactsView"],"sourceRoot":""}